{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/signin/signin.component.css","webpack:///./src/app/components/signin/signin.component.html","webpack:///./src/app/components/signin/signin.component.ts","webpack:///./src/app/components/signup/signup.component.css","webpack:///./src/app/components/signup/signup.component.html","webpack:///./src/app/components/signup/signup.component.ts","webpack:///./src/app/photos/shared/store/photos.actions.ts","webpack:///./src/app/share/components/topbar/topbar.component.css","webpack:///./src/app/share/components/topbar/topbar.component.html","webpack:///./src/app/share/components/topbar/topbar.component.ts","webpack:///./src/app/share/guards/auth.guard.ts","webpack:///./src/app/share/interceptors/auth.interceptor.ts","webpack:///./src/app/share/modules/core.module.ts","webpack:///./src/app/share/modules/layout.module.ts","webpack:///./src/app/share/modules/material.module.ts","webpack:///./src/app/share/services/auth.service.ts","webpack:///./src/app/share/services/user.service.ts","webpack:///./src/app/share/store/actions/auth.actions.ts","webpack:///./src/app/share/store/effects/auth.effects.ts","webpack:///./src/app/share/store/index.ts","webpack:///./src/app/share/store/reducers/auth.reducer.ts","webpack:///./src/app/share/store/selectors/auth.selectors.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./photos/photos.module\": [\n\t\t\"./src/app/photos/photos.module.ts\",\n\t\t\"photos-photos-module\"\n\t],\n\t\"./profile/profile.module\": [\n\t\t\"./src/app/profile/profile.module.ts\",\n\t\t\"profile-profile-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-topbar></app-topbar>\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { State } from './share/store';\r\nimport { TryRefreshToken } from './share/store/actions/auth.actions';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'client';\r\n\r\n  constructor( private store:Store<State>){\r\n    this.store.dispatch(new TryRefreshToken)\r\n  }\r\n}\r\n","// Module natifs\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { environment } from 'src/environments/environment';\r\n\r\n//Modules\r\nimport {  BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\n\r\n// Component\r\nimport { AppComponent } from './app.component';\r\n\r\n\r\n// routing\r\nimport {APP_ROUTING } from './app.routing';\r\nimport { CoreModule } from './share/modules/core.module';\r\n\r\n// NgRx\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { reducersMap } from './share/store';\r\nimport { AuthEffects } from './share/store/effects/auth.effects';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    CoreModule,\r\n    RouterModule.forRoot(APP_ROUTING),\r\n    StoreModule.forRoot(reducersMap),\r\n    StoreDevtoolsModule.instrument({\r\n      name:'Ngrx Photos',\r\n      logOnly: environment.production // pour ne pas avoir acces en production au store sinon posez vous des questions ? \r\n    }),\r\n    EffectsModule.forRoot([AuthEffects]),\r\n    \r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Route } from '@angular/router' \r\nimport { SignupComponent } from './components/signup/signup.component';\r\nimport { SigninComponent } from './components/signin/signin.component';\r\nimport { AuthGuard } from \"./share/guards/auth.guard\";\r\n\r\n\r\nexport const APP_ROUTING:Route[]=[\r\n{ path:'',\r\n  pathMatch:'full',\r\n  redirectTo:'photos'\r\n },\r\n { path:'photos', loadChildren:'./photos/photos.module#PhotosModule' },\r\n\r\n{ path:'signup',component:SignupComponent },\r\n{ path:'signin',component:SigninComponent },\r\n{ path:'profile',canActivate:[AuthGuard],loadChildren:'./profile/profile.module#ProfileModule' },\r\n]; ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lnbmluL3NpZ25pbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"my-5 py-5\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <mat-card>Connexion\\r\\n    <mat-card-content>\\r\\n      <form [formGroup]=\\\"form\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"15px\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"email\\\" placeholder=\\\"email\\\" formControlName=\\\"email\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"password\\\" placeholder=\\\"mot de passe\\\" formControlName=\\\"password\\\">\\r\\n        </mat-form-field>\\r\\n        <div style=\\\"color:red;\\\" *ngIf=\\\"error$ | async; let error\\\">{{ error }}</div>\\r\\n        <button (click)=\\\"submit()\\\" color=\\\"primary\\\" mat-raised-button>Connexion</button>\\r\\n      </form>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/share/services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport {User } from '../../share/models/user.model';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { State } from 'src/app/share/store';\r\nimport { Observable } from 'rxjs';\r\nimport { errorAuthSelector } from 'src/app/share/store/selectors/auth.selectors';\r\nimport { TrySignin } from 'src/app/share/store/actions/auth.actions';\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.css']\r\n})\r\nexport class SigninComponent implements OnInit {\r\n\r\n  public form: FormGroup;\r\n  public error$: Observable<string>;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private store: Store<State>\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      email: [''],\r\n      password: ['']\r\n    });\r\n\r\n    this.error$ =this.store.pipe(\r\n      select(errorAuthSelector)\r\n    );\r\n\r\n  }\r\n\r\n  public submit(): void {\r\n    this.store.dispatch(new TrySignin(this.form.value));\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"my-5 py-5\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <mat-card>Inscription\\r\\n    <mat-card-content>\\r\\n      <form [formGroup]=\\\"form\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"15px\\\">\\r\\n        <mat-form-field>\\r\\n              <input matInput type=\\\"email\\\" placeholder=\\\"email\\\" formControlName=\\\"email\\\">\\r\\n            </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"name\\\" placeholder=\\\"name\\\" formControlName=\\\"name\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"password\\\" placeholder=\\\"mot de passe\\\" formControlName=\\\"password\\\">\\r\\n        </mat-form-field>\\r\\n        <div *ngIf=\\\"error$ | async; let error\\\"><pre>{{ error }}</pre></div>\\r\\n          <button (click)=\\\"submit()\\\" color=\\\"primary\\\" mat-raised-button>Inscription</button>\\r\\n      </form>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/share/services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { State } from 'src/app/share/store';\r\nimport { TrySignup } from 'src/app/share/store/actions/auth.actions';\r\nimport { errorAuthSelector } from 'src/app/share/store/selectors/auth.selectors';\r\nimport { Observable } from 'rxjs';\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  public form:FormGroup;\r\n  public error$:Observable<string>;\r\n  \r\n  constructor(private fb:FormBuilder,\r\n    private authService:AuthService,\r\n    private router:Router,\r\n    private store :Store<State>\r\n    ){}\r\n\r\n  ngOnInit() {\r\n    this.form= this.fb.group({\r\n      email:[''],\r\n      name:[''],\r\n      password:['']\r\n    })\r\n    this.error$= this.store.pipe(select(errorAuthSelector))\r\n  }\r\n\r\n  public submit():void{\r\n    this.store.dispatch(new TrySignup(this.form.value));\r\n    // this.authService.signup(this.form.value).subscribe( (user:User) => {\r\n    //   // ca marche donc redirection sur la page de connexion\r\n    //   this.router.navigate(['/signin'])\r\n    // },err =>{\r\n    //   console.log('[err] = ', err)\r\n    //   this.error = err.error;\r\n    // });\r\n    // console.log(this.form.value)\r\n  }\r\n}\r\n\r\n","import { Action } from '@ngrx/store';\r\nimport { Photo } from '../models/photo.model';\r\n\r\nexport enum PhotosActionTypes {\r\n  SetFilter = '[ Photos ] - Set filter',\r\n  FetchPhotos = '[ Photos ] - Fetch photos',\r\n  FetchPhotosSuccess = '[ Photos ] - Fetch photos success'\r\n}\r\n\r\nexport class SetFilter implements Action {\r\n  readonly type = PhotosActionTypes.SetFilter\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class FetchPhotos implements Action {\r\n  readonly type = PhotosActionTypes.FetchPhotos;\r\n}\r\n\r\nexport class FetchPhotosSuccess implements Action {\r\n  readonly type = PhotosActionTypes.FetchPhotosSuccess;\r\n  constructor(public payload: Photo[]) {}\r\n}\r\n\r\nexport type PhotosActions = SetFilter |\r\n                          FetchPhotos |\r\n                          FetchPhotosSuccess ;","module.exports = \"input{\\r\\n    outline: 0;\\r\\n    padding: 3px 20px;\\r\\n    font-size: 14px;\\r\\n    border-radius:3px ;\\r\\n    border: 0px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmUvY29tcG9uZW50cy90b3BiYXIvdG9wYmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1YsaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsV0FBVztBQUNmIiwiZmlsZSI6InNyYy9hcHAvc2hhcmUvY29tcG9uZW50cy90b3BiYXIvdG9wYmFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dHtcclxuICAgIG91dGxpbmU6IDA7XHJcbiAgICBwYWRkaW5nOiAzcHggMjBweDtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIGJvcmRlci1yYWRpdXM6M3B4IDtcclxuICAgIGJvcmRlcjogMHB4O1xyXG59Il19 */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" fxLayoutGap=\\\"15px\\\">\\r\\n  <span class=\\\"link\\\" routerLink=\\\"/\\\">Mon Logo</span>\\r\\n    <input fxFlex=\\\"auto\\\" type=\\\"text\\\" (keyup)=\\\"applyFilter($event.target.value)\\\" >\\r\\n<!--   <span fxFlex=\\\"auto\\\"></span>\\r\\n -->  <span *ngIf=\\\"!(isLoggedIn$| async)\\\">\\r\\n    <span fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n      <span class=\\\"link\\\" routerLink=\\\"/signin\\\">Connexion</span>\\r\\n       <span class=\\\"link\\\" routerLink=\\\"/signup\\\">Inscription</span>\\r\\n    </span>\\r\\n    </span>\\r\\n    <span *ngIf=\\\"isLoggedIn$| async\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n      <span class=\\\"link\\\" routerLink=\\\"/profile\\\" >Mon compte</span>\\r\\n      <mat-icon class=\\\"link\\\" (click)=\\\"logout()\\\">power_settings_new</mat-icon>\\r\\n    </span>\\r\\n</mat-toolbar>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport {  Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { JwtToken } from '../../models/jwt-token.model';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { State } from '../../store';\r\nimport { isLoggedInSelector } from '../../store/selectors/auth.selectors';\r\nimport { Logout } from '../../store/actions/auth.actions';\r\nimport { SetFilter, FetchPhotos } from 'src/app/photos/shared/store/photos.actions';\r\n\r\n@Component({\r\n  selector: 'app-topbar',\r\n  templateUrl: './topbar.component.html',\r\n  styleUrls: ['./topbar.component.css']\r\n})\r\nexport class TopbarComponent implements OnInit {\r\n\r\n  public jwtToken:JwtToken;\r\n  public isLoggedIn$:Observable<boolean>;\r\n  constructor(private authService: AuthService,private router:Router,private store:Store<State>) { }\r\n\r\n  ngOnInit() {\r\n    // this.subscription= this.authService.jwtToken.subscribe((jwtToken:JwtToken) =>{\r\n    //   this.jwtToken=jwtToken;\r\n    // })\r\n    this.isLoggedIn$ = this.store.pipe(select(isLoggedInSelector));\r\n  }\r\n\r\n  public applyFilter(filter:string):void{\r\n   // console.log(filter)\r\n    this.store.dispatch(new SetFilter(filter))\r\n    this.store.dispatch(new FetchPhotos())\r\n  }\r\n\r\n  public logout():void{\r\n  //this.authService.logout();\r\n  this.store.dispatch(new Logout);\r\n   }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { map, take } from 'rxjs/operators';\nimport { JwtToken } from '../models/jwt-token.model';\nimport { Store, select } from '@ngrx/store';\nimport { State } from '../store';\nimport { isLoggedInSelector } from '../store/selectors/auth.selectors';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n \n  constructor(private store:Store<State>){}\n  \n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state:RouterStateSnapshot):Observable<boolean> | Promise<boolean>| boolean{\n      // la fonction ci dessous retourne un Observable\n      // return this.authService.jwtToken.pipe(\n      //   map( (jwtToken:JwtToken)=>{\n      //     return jwtToken.isAuthenticated;\n      //   })\n      // );\n      return this.store.pipe(\n        take(1), //take(1) on selectionne que la premiere valeur : \n        //on utilise l’opérateur take pour ne prendre que la première valeur puis couper la subscription à notre store.\n        select(isLoggedInSelector)\n      )\n    }\n}\n\n  \n\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\nimport { State } from '../store';\nimport { tokenSelector } from '../store/selectors/auth.selectors';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    private token: string;\n    \n    constructor(private store: Store<State>) {\n        this.store.pipe(select(tokenSelector))\n          .subscribe((token: string) => this.token = token);\n      }\n\n    // intecept la requete que nous allons catch\n    intercept(req: HttpRequest<any>,next: HttpHandler):Observable<HttpEvent<any>>{ \n        //const token = localStorage.getItem('jwt');\n        if(this.token){\n            // si on a un token on clone la requete pour lui passer le token\n            const authReq = req.clone({\n                // on set une key que lon appelle authorization avec notre token\n                headers: req.headers.set('authorization',this.token)\n            });\n            // return next.handle(req) permert l'execution de la requete\n            return next.handle(authReq);\n        } else {\n            return next.handle(req);\n        }\n\n    }\n}\n","// Modules natifs\nimport { NgModule } from '@angular/core';\nimport { LayoutModule } from './layout.module';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n// components\nimport { SignupComponent } from 'src/app/components/signup/signup.component';\nimport { SigninComponent } from 'src/app/components/signin/signin.component';\nimport { TopbarComponent } from '../components/topbar/topbar.component';\n\n// services\nimport { UserService } from '../services/user.service';\nimport { AuthService } from '../services/auth.service';\n\n// interceptors\nimport { AuthInterceptor } from '../interceptors/auth.interceptor';\n\n// Guards\nimport { AuthGuard } from '../guards/auth.guard';\nimport { RouterModule } from '@angular/router';\n\n// le core module doit contenir les services et guard \nconst COMPONENTS =[ \n  SignupComponent,\n  SigninComponent,\n  TopbarComponent] \n\n@NgModule({\n  declarations:COMPONENTS,\n  exports:COMPONENTS,\n  imports: [\n    HttpClientModule,\n    LayoutModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  providers: [ \n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass:AuthInterceptor,\n      multi:true\n    },\n  AuthService,UserService,AuthGuard\n]\n})\nexport class CoreModule { }\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MaterialModule } from './material.module';\r\n\r\n\r\nconst MODULE=[FlexLayoutModule,MaterialModule,CommonModule]\r\n@NgModule({\r\n  imports: MODULE,\r\n  exports:MODULE\r\n})\r\nexport class LayoutModule { }\r\n \r\n","import { NgModule } from '@angular/core';\nimport { MatToolbarModule,MatButtonModule,MatInputModule,MatFormFieldModule,MatCardModule, MatIconModule } from \"@angular/material\";\n\n\nconst MODULE=[MatToolbarModule,MatButtonModule,MatInputModule,MatFormFieldModule,MatCardModule,MatIconModule]\n@NgModule({\n  declarations:[],\n  imports: MODULE\n  ,exports:MODULE\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject ,Subscription,timer,of} from 'rxjs';\r\nimport { User } from '../models/user.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { JwtToken } from '../models/jwt-token.model';\r\nimport { tap ,switchMap} from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { State } from '../store';\r\nimport { TryRefreshToken } from '../store/actions/auth.actions';\r\nimport { Credential } from '../models/credential.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  public subscription: Subscription;\r\n\r\n  public jwtToken:BehaviorSubject<JwtToken> = new BehaviorSubject({\r\n    isAuthenticated:false,\r\n    expireDate: null,\r\n    token:null\r\n  });\r\n  constructor(\r\n    private httpClient :HttpClient,\r\n    private router:Router,\r\n    private store: Store<State>\r\n    ){ \r\n    this.initToken();\r\n    //this.subscription = this.initTimer();\r\n    }\r\n\r\n  // public initTimer() {\r\n  //   // le timer est un type d'observable comme subject ...\r\n  //   //permet de déclancher un observable apres x temps apres 2 sec il va emetre une action toute les 5 secondes\r\n  //   //le ttimer va être a la deuxieme seconde on va récupere un token apres toute les 5 secondes\r\n  //   return timer(2000, 5000).pipe(\r\n  //     //switch map car cela retourne un nouvelle observable\r\n  //     switchMap(() => {\r\n  //       if (localStorage.getItem('jwt')) {\r\n  //         console.log('try refresh token');\r\n  //         //return le nouveau token rafraichit\r\n  //         return this.httpClient.get<string>('/api/auth/refresh-token').pipe(\r\n  //           tap((token: string) => {\r\n  //             this.jwtToken.next({\r\n  //               isAuthenticated: true,\r\n  //               token: token\r\n  //             });\r\n  //             localStorage.setItem('jwt', token);\r\n  //           })\r\n  //         );\r\n  //       } else {\r\n  //         console.log('no token to refresh');\r\n  //         this.subscription.unsubscribe();\r\n  //         // of null renvoie null via a un observable a cause du switchMap\r\n  //         return of(null);\r\n  //       }\r\n  //     })\r\n  //   ).subscribe(() => {}, err => {\r\n  //     //si il y a eu une erreur le refresh n'a pas réussi\r\n  //     // pas de token a refresh\r\n  //     this.jwtToken.next({\r\n  //       isAuthenticated: false,\r\n  //       token: null\r\n  //     });\r\n  //     localStorage.removeItem('jwt');\r\n  //     this.subscription.unsubscribe();\r\n  //   });\r\n  // }\r\n\r\n  public initRefreshToken() {\r\n    return timer(2000, 5000).pipe(\r\n      tap( () => {\r\n        this.store.dispatch(new TryRefreshToken())\r\n      })\r\n    )\r\n  }\r\n\r\n  public refreshToken() {\r\n    return this.httpClient.get<string>('/api/auth/refresh-token');\r\n  }\r\n\r\n  private initToken():void {\r\n    const token = localStorage.getItem('jwt');\r\n    if(token){\r\n      this.jwtToken.next({ \r\n        isAuthenticated:true,token:token\r\n      });\r\n    } else{\r\n      this.jwtToken.next({ \r\n        isAuthenticated:false,token:null\r\n      });\r\n      }\r\n     // console.log(this.jwtToken.value);\r\n    }\r\n  \r\n\r\n  public signup(user:User):Observable<User> {\r\n    return this.httpClient.post<User>('/api/auth/signup',user); \r\n  }\r\n  // A revoir correctement\r\n  // pipe = operateur si un bservable\r\n  // tap recupere la data qui parcour la chaine d'observable nous permet juste d'exuecuter une action comme si il n'éxistait pas\r\n  public signin(credentials:Credential):Observable<string>{\r\n    return this.httpClient.post<string>('/api/auth/signin',credentials)\r\n    // .pipe(\r\n    //   tap( (token:string)=>{\r\n    //     this.jwtToken.next({\r\n    //       isAuthenticated:true,\r\n    //       token: token\r\n    //     });\r\n    //     // méthode pas safe stockage sur l'ordinateur client \r\n\r\n    //     localStorage.setItem('jwt',token)\r\n    //     this.subscription = this.initTimer();\r\n\r\n    //   })\r\n    // )\r\n  }\r\n\r\n  public logout():void{\r\n    this.jwtToken.next({ \r\n      isAuthenticated:false,token:null\r\n    });\r\n    localStorage.removeItem('jwt');\r\n    this.router.navigate(['/signin']);\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\nimport { Observable, BehaviorSubject } from \"rxjs\";\nimport { HttpClient } from '@angular/common/http';\nimport { tap, switchMap } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n // public currentUser:BehaviorSubject<User> = new BehaviorSubject(null);\n\n  constructor(private http: HttpClient) { }\n\n     public getCurentUser():Observable<User>{\n       return this.http.get<User>('/api/user/current')\n    }\n\n  // public getCurentUser():Observable<User>{\n\n  //   if(this.currentUser.value){\n  //     console.log('currentUser =', this.currentUser )\n  //     return this.currentUser;\n  //   }else{\n  //     // on fait un call http qui va nous permettre d'initialiser un user \n  //     // nous on veut que le component pas seulement a linstant T mais tout le temps que\n  //     // ce soit ok\n  //     return this.http.get<User>('/api/user/current').pipe(\n  //       // operateur tap recupere de l'information en entrée ca fait commme si le tap n'éxistait pas sans\n  //       //permet d'éxecuter du code sur information récupére\n  //       tap( (user:User)=>{\n  //         this.currentUser.next(user);\n  //       }),\n  //       // switchmap récupere le user en entrée on a pas besoin de le mettre dans les parenthèses\n  //       // et return un nouvelle observable\n  //       switchMap( ()=>{\n  //         return this.currentUser;\n  //       })\n  //     );\n  //   }\n  // }\n}\n","import { Action } from '@ngrx/store';\r\nimport { User } from '../../models/user.model';\r\nimport { Credential } from '../../models/credential.model';\r\n\r\nexport enum AuthActionTypes {\r\n    TrySignup = '[ User ] - Try Signup',\r\n    SignupSuccess = '[ User ] - Signup success',\r\n    SignupError = '[ User ] - Signup error',\r\n    TrySignin = '[ User ] - Try Signin',\r\n    SigninSuccess = '[ User ] - Signin success',\r\n    SigninError = '[ User ] - Signin error',\r\n    TryFetchUser = '[ User ] - Try Fetch User',\r\n    SetCurrentUser = '[ User ] - Set current User',\r\n    TryRefreshToken = '[ User ] - Try refresh token',\r\n    Logout='[ User ] - Logout'\r\n  }\r\n\r\n\r\n  export class TrySignup implements Action {\r\n    readonly type = AuthActionTypes.TrySignup\r\n    constructor(public payload: User) {}\r\n  }\r\n  \r\n  export class SignupSuccess implements Action {\r\n    readonly type = AuthActionTypes.SignupSuccess;\r\n    constructor(public payload: any) {}\r\n  }\r\n  \r\n  export class SignupError implements Action {\r\n    readonly type = AuthActionTypes.SignupError;\r\n    constructor(public payload: any) {}\r\n  }\r\n  \r\n  export class TrySignin implements Action {\r\n    readonly type = AuthActionTypes.TrySignin;\r\n    constructor(public payload: Credential) {}\r\n  }\r\n  \r\n  export class SigninSuccess implements Action {\r\n    readonly type = AuthActionTypes.SigninSuccess;\r\n    constructor(public payload: string) {}\r\n  }\r\n  \r\n  export class SigninError implements Action {\r\n    readonly type = AuthActionTypes.SigninError;\r\n    constructor(public payload: any) {}\r\n  }\r\n  \r\n  export class TryFetchCurrentUser implements Action {\r\n    readonly type = AuthActionTypes.TryFetchUser; // pas de payload car on va juste récupérer le token\r\n  }\r\n  \r\n  export class SetCurrentUser implements Action {\r\n    readonly type = AuthActionTypes.SetCurrentUser;\r\n    constructor(public payload: User) {}\r\n  }\r\n  \r\n  export class TryRefreshToken implements Action {\r\n    readonly type = AuthActionTypes.TryRefreshToken;\r\n  }\r\n  \r\n  export class Logout implements Action {\r\n    readonly type = AuthActionTypes.Logout\r\n  }\r\n  export type AuthActions = TrySignup |\r\n                            SignupSuccess |\r\n                            SignupError |\r\n                            TrySignin |\r\n                            SigninSuccess |\r\n                            SigninError |\r\n                            TryFetchCurrentUser |\r\n                            SetCurrentUser |\r\n                            TryRefreshToken |\r\n                            Logout","import { Injectable } from \"@angular/core\";\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { AuthActionTypes, TrySignup, SignupSuccess, SignupError, TrySignin, SigninSuccess, SigninError, TryRefreshToken, TryFetchCurrentUser, SetCurrentUser } from '../actions/auth.actions';import { map, switchMap, switchMapTo, catchError, exhaustMap, tap, withLatestFrom } from 'rxjs/operators';\r\nimport { User } from '../../models/user.model';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { empty, of, Subscription } from 'rxjs';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { State } from '..';\r\nimport { tokenSelector } from '../selectors/auth.selectors';\r\nimport { UserService } from '../../services/user.service';\r\n\r\n@Injectable()\r\nexport class AuthEffects{\r\n    \r\n    private subscription: Subscription;\r\n\r\n    @Effect()\r\n    trySignup$ = this.actions$.pipe(\r\n    ofType<TrySignup>(AuthActionTypes.TrySignin)//pour reconnaitre notre action\r\n    ,map((action : TrySignup) => action.payload)// on retourne notre payload don un user\r\n    ,exhaustMap((user:User) => {\r\n        return this.authService.signup(user)\r\n    })// retour du call http donc retour de l'observable\r\n    ,switchMap( () => { // si good\r\n        this.router.navigate(['/signin'])\r\n        return empty();\r\n    }),catchError( (err:any)=> {\r\n        return of(new SignupError(err))               \r\n    })\r\n)\r\n\r\n\r\n@Effect({ dispatch: false })\r\nsignupSuccess$ = this.actions$.pipe(\r\n  ofType(AuthActionTypes.SignupSuccess),\r\n  tap(() => this.router.navigate(['/signin']))\r\n);\r\n\r\n@Effect()\r\ntrySignin$ = this.actions$.pipe(\r\n  ofType<TrySignin>(AuthActionTypes.TrySignin),\r\n  map( (action: TrySignin) => action.payload),\r\n  exhaustMap((credentials: {email: string, password: string}) =>\r\n    this.authService\r\n      .signin(credentials)\r\n      .pipe(\r\n        map(token => new SigninSuccess(token)),\r\n        catchError(error => of(new SigninError(error)))\r\n      )\r\n  )\r\n);\r\n\r\n@Effect({ dispatch: false })\r\nsigninSuccess$ = this.actions$.pipe(\r\n  ofType(AuthActionTypes.SigninSuccess),\r\n  map( (action: SigninSuccess) => action.payload),\r\n  tap((token) => {\r\n    localStorage.setItem('token', token);\r\n    if (!this.subscription) {\r\n      this.subscription = this.authService.initRefreshToken().subscribe();\r\n      this.router.navigate(['/']);\r\n    }\r\n  })\r\n);\r\n\r\n@Effect()\r\ntryRefreshToken$ = this.actions$.pipe(\r\n  ofType(AuthActionTypes.TryRefreshToken),\r\n  withLatestFrom(this.store.pipe(select(tokenSelector))),// ça permet de récuperer la derniere variable d'un observable\r\n  switchMap(([action ,token]) =>{\r\n    if(token){\r\n      return this.authService.refreshToken().pipe(\r\n        map((newtoken:string) => {\r\n          return new SigninSuccess(newtoken);\r\n        }),\r\n        catchError(( err:any) => {\r\n          localStorage.removeItem('token');\r\n          if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n          }\r\n          return empty()\r\n        })\r\n      );\r\n    } else{ return empty()}\r\n  }));\r\n\r\n@Effect({ dispatch: false })\r\nLogout$ = this.actions$.pipe(\r\n  ofType(AuthActionTypes.Logout),\r\n  tap(() => {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    localStorage.removeItem('token');\r\n    this.router.navigate(['/']);\r\n  })\r\n);\r\n\r\n@Effect()\r\nTryFetchUser$ = this.actions$.pipe(\r\n  ofType<TryFetchCurrentUser>(AuthActionTypes.TryFetchUser),\r\n  switchMap(() =>{ return this.userService.getCurentUser();})\r\n  ,map( (user:User)=>{\r\n    return new SetCurrentUser(user);\r\n  }),\r\n  catchError((err:any) => {\r\n    console.log('error in tryFetchCurrentUser');\r\n    return empty();\r\n  }));\r\n   \r\n    \r\n\r\n\r\n    constructor(\r\n        private actions$:Actions,\r\n        private authService: AuthService,\r\n        private userService:UserService,\r\n        private router:Router,\r\n        private store:Store<State>\r\n    ){}\r\n}","import { ActionReducerMap } from '@ngrx/store';\r\nimport { AuthState, authReducer } from './reducers/auth.reducer';\r\n\r\n\r\nexport interface State {\r\n    auth:AuthState\r\n}\r\n\r\nexport const reducersMap:ActionReducerMap<State>={\r\nauth: authReducer\r\n};","import { User } from '../../models/user.model';\r\nimport { AuthActions,  AuthActionTypes } from '../actions/auth.actions';\r\n\r\nexport interface AuthState {\r\n   user:User;\r\n   token: string;\r\n   error:string;\r\n   isLoggedIn:boolean;\r\n};\r\n\r\nexport const initialAuthState: AuthState = {\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  error: null,\r\n  isLoggedIn: false\r\n};\r\n\r\nexport function authReducer(state: AuthState = initialAuthState,action :AuthActions){\r\n    switch (action.type) {\r\n        case AuthActionTypes.SigninError:\r\n        case AuthActionTypes.SignupError: {\r\n          return {\r\n            ...state,\r\n            error: action.payload\r\n          };\r\n        }\r\n        case AuthActionTypes.SigninSuccess: {\r\n          return {\r\n            ...state,\r\n            token: action.payload,\r\n            isLoggedIn: true,\r\n            error: null\r\n          };\r\n        }\r\n        case AuthActionTypes.Logout: {\r\n          return {\r\n            ...state,\r\n            user:null,\r\n            token: null,\r\n            error: null,\r\n            isLoggedIn: false\r\n          };\r\n        }\r\n        case AuthActionTypes.SetCurrentUser: {\r\n          return {\r\n            ...state,\r\n            user:action.payload\r\n          };\r\n        }\r\n      }\r\n      return state;\r\n}","import { createFeatureSelector, createSelector } from '@ngrx/store'\r\nimport { AuthState } from '../reducers/auth.reducer';\r\n\r\n\r\nexport const KEY_AUTH_SELECTOR ='auth';\r\n\r\nexport const authSelector = createFeatureSelector(KEY_AUTH_SELECTOR)//createFeatureSelector pour récupérer une partie du state\r\nexport const errorAuthSelector = createSelector(\r\n    authSelector,\r\n    // fonction une projection qui doit définir ce que se selctor doit retourner\r\n    (authState:AuthState)=>{\r\n        return authState.error\r\n    }\r\n)\r\nexport const tokenSelector = createSelector(authSelector, (authState: AuthState) => {\r\n    if(authState.token){\r\n        return authState.token\r\n    }else{\r\n        return null\r\n    }\r\n});\r\n\r\nexport const isLoggedInSelector = createSelector(authSelector, (authState: AuthState) => {\r\n    if(authState.isLoggedIn){\r\n        return authState.isLoggedIn\r\n    }else{\r\n        return null\r\n    }\r\n});\r\nexport const currentUserSelector = createSelector(authSelector, (authState: AuthState) => {\r\n    if(authState){\r\n        return authState.user\r\n    }else{\r\n        return null\r\n    }\r\n});\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}