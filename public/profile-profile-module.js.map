{"version":3,"sources":["webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/profile/profile.module.ts","webpack:///./src/app/profile/profile.routes.ts"],"names":[],"mappings":";;;;;;;;;AAAA,+DAA+D,+I;;;;;;;;;;;ACA/D,sYAAsY,SAAS,qEAAqE,cAAc,+BAA+B,aAAa,gE;;;;;;;;;;;;;;;;;;;;ACA5d;AAGN;AAE8B;AACI;AAO9E;IAGE,0BAAoB,KAAkB;QAAlB,UAAK,GAAL,KAAK,CAAa;IAAI,CAAC;IAE3C,mCAAQ,GAAR;QAEC,IAAI,CAAC,YAAY,GAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0DAAM,CAAC,yFAAmB,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,qFAAmB,EAAE,CAAC;IAC/C,CAAC;IATU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,yGAAuC;;SAExC,CAAC;+EAI0B,iDAAK;OAHpB,gBAAgB,CAW5B;IAAD,uBAAC;CAAA;AAX4B;;;;;;;;;;;;;;;;;;;;;;ACbY;AACc;AACR;AACG;AACY;AAY9D;IAAA;IAA6B,CAAC;IAAjB,aAAa;QARzB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,mEAAgB,CAAC;YAChC,OAAO,EAAE;gBACP,4DAAY,CAAC,QAAQ,CAAC,8DAAc,CAAC;gBACrC,yEAAY;aAEb;SACF,CAAC;OACW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ;;;;;;;;;;;;;AChB1B;AAAA;AAAA;AAAuD;AAIhD,IAAM,cAAc,GAAS;IAChC;QACK,IAAI,EAAC,EAAE;QACR,SAAS,EAAC,mEAAgB;KAC7B;CAEA,CAAC","file":"profile-profile-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"my-5 py-5\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n    <mat-card>\\n      <mat-card-title>Mon compte</mat-card-title>\\n      <!-- pipe asyn apres un let user Stock la valeur de l'observable dans user\\n      avantage pipe async pas besoin de géré le unsubscribe destroy fait automatiquement -->\\n      <mat-card-content *ngIf=\\\"currentUser$ | async;let user;\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"20px\\\">\\n        <div>email : {{ user.email }} </div>\\n        <div>name : {{ user.name }} </div>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../share/models/user.model';\nimport { Observable } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\nimport { State } from '../share/store';\nimport { TryFetchCurrentUser } from '../share/store/actions/auth.actions';\nimport { currentUserSelector } from '../share/store/selectors/auth.selectors';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  public currentUser$:Observable<User>;\n  constructor(private store:Store<State>) { }\n\n  ngOnInit() {\n    \n   this.currentUser$= this.store.pipe(select(currentUserSelector));\n   this.store.dispatch(new TryFetchCurrentUser())\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ProfileComponent } from './profile.component';\nimport { RouterModule } from '@angular/router';\nimport { PROFILE_ROUTES } from './profile.routes';\nimport { LayoutModule } from '../share/modules/layout.module';\n\n\n\n@NgModule({\n  declarations: [ProfileComponent],\n  imports: [\n    RouterModule.forChild(PROFILE_ROUTES),\n    LayoutModule\n    \n  ]\n})\nexport class ProfileModule { }\n","import { ProfileComponent } from './profile.component';\r\nimport { Routes ,Route} from '@angular/router';\r\n\r\n\r\nexport const PROFILE_ROUTES:Route[]=[\r\n    {\r\n         path:'',\r\n        component:ProfileComponent \r\n    }\r\n\r\n    ]; "],"sourceRoot":""}